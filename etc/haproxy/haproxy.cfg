global
       user haproxy
       group haproxy
       daemon

defaults
        log     global
        option http-server-close
        timeout http-request 6000s
        timeout connect 6000s
        timeout client 6000s
        timeout server  6000s


frontend http_in
        bind *:801
        mode tcp
        option tcpka

        #Check if it is a letsencrypt.com request so we redirect to that backend
        acl has_special_uri path_beg /.well-known/acme-challenge
        use_backend letsencrypt_backend if has_special_uri

        #Go to normal http server
        default_backend http_backend

frontend https_in

log /dev/log local0 debug

        bind *:4435
        mode tcp
        option tcpka

        stick-table type ip size 100k expire 120s store conn_cur

        # Reject connection if client has more than 10 open
        #tcp-request connection reject if { src_conn_cur ge 10 }
        #tcp-request connection track-sc1 src

        # Max inspection delay for SNI routing
        tcp-request inspect-delay 100s

        # Accept only SSL/TLS traffic
        tcp-request content accept if { req_ssl_hello_type 1 }

        # If SNI hostname is known server AND is from known IP, pass to backend, adjust this to your real domain name
        acl valid_domains req.ssl_sni -m end .gvps.site
        use_backend ssl_backend if valid_domains


backend letsencrypt_backend
        mode tcp
        server http_server 10.0.0.90:80 send-proxy

backend http_backend
        mode tcp
        server http_server 10.0.0.90:80 send-proxy

backend ssl_backend
        mode tcp
        option tcpka

        # Proxy protocol to preserve client info. Needs to be enabled in nginx
        server ssl_server 10.0.0.90:443 send-proxy

